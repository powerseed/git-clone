import collections

from classes.GitTag import GitTag
from functions.convert_key_value_pairs_to_raw_for_tag_and_commit import \
    convert_key_value_pairs_to_raw_for_tag_and_commit
from functions.create_ref import create_ref
from functions.write_object import write_object


def create_tag(gitdir, new_tag_name, sha_object_pointed_to):
    tag = GitTag(data=None)

    ordered_dict = collections.OrderedDict()
    ordered_dict[b'object'] = [sha_object_pointed_to.encode()]
    ordered_dict[b'type'] = [b'commit']
    ordered_dict[b'tag'] = [new_tag_name.encode()]
    ordered_dict[b'tagger'] = [b'Wyag <wyag@example.com>']
    ordered_dict[None] = b"A tag generated by wyag, which won't let you customize the message!"

    raw = convert_key_value_pairs_to_raw_for_tag_and_commit(ordered_dict)
    tag.set_blob_data(raw)

    tag_sha = write_object(tag, "tag", gitdir)

    create_ref(gitdir, "refs/tags/" + new_tag_name, tag_sha)